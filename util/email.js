const nodemailer = require('nodemailer');
require('dotenv').config();

// T·∫°o transporter v·ªõi c·∫•u h√¨nh Gmail
const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASSWORD
    }
});

// Ki·ªÉm tra k·∫øt n·ªëi mail
transporter.verify(function (error, success) {
    if (error) {
        console.log('L·ªói k·∫øt n·ªëi email:', error);
    } else {
        console.log('‚úÖ K·∫øt n·ªëi email th√†nh c√¥ng!');
    }
});

// G·ª≠i email x√°c nh·∫≠n ƒë∆°n h√†ng cho kh√°ch h√†ng
const sendOrderConfirmation = async (order, user) => {
    try {
        const customerEmail = order.shippingInfo?.email || user.email;
        const customerName = order.shippingInfo?.name || user.name;
        
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: customerEmail,
            subject: 'X√°c nh·∫≠n ƒë∆°n h√†ng - Ph∆∞∆°ng Store',
            html: `
                <h1>Xin ch√†o ${customerName}!</h1>
                <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng t·∫°i Ph∆∞∆°ng Store.</p>
                <h2>Chi ti·∫øt ƒë∆°n h√†ng:</h2>
                <p>M√£ ƒë∆°n h√†ng: ${order._id}</p>
                <p>T·ªïng ti·ªÅn: ${order.totalPrice.toLocaleString('vi-VN')} VNƒê</p>
                <h3>Th√¥ng tin giao h√†ng:</h3>
                <p>H·ªç t√™n: ${order.shippingInfo?.name}</p>
                <p>ƒêi·ªán tho·∫°i: ${order.shippingInfo?.phone}</p>
                <p>Email: ${order.shippingInfo?.email}</p>
                <p>ƒê·ªãa ch·ªâ: ${order.shippingInfo?.address}</p>
                <h3>Th√¥ng tin thanh to√°n:</h3>
                <p>Ph∆∞∆°ng th·ª©c: ${order.getPaymentMethodDisplay()}</p>
                <p>Tr·∫°ng th√°i thanh to√°n: ${order.getPaymentStatusDisplay()}</p>
                ${order.paymentMethod === 'bank' && order.paymentStatus === 'awaiting' ? `
                    <div style="background-color: #f0f8ff; padding: 15px; border-left: 4px solid #007bff; margin: 10px 0;">
                        <h4>Th√¥ng tin chuy·ªÉn kho·∫£n:</h4>
                        <p><strong>Ng√¢n h√†ng:</strong> Vietcombank</p>
                        <p><strong>S·ªë t√†i kho·∫£n:</strong> 1234567890</p>
                        <p><strong>Ch·ªß t√†i kho·∫£n:</strong> Ph∆∞∆°ng Store</p>
                        <p><strong>N·ªôi dung:</strong> DH${order._id}</p>
                        <p><strong>S·ªë ti·ªÅn:</strong> ${order.totalPrice.toLocaleString('vi-VN')} VNƒê</p>
                    </div>
                ` : ''}
                ${order.paymentMethod === 'ewallet' && order.paymentStatus === 'awaiting' ? `
                    <div style="background-color: #f0f8ff; padding: 15px; border-left: 4px solid #28a745; margin: 10px 0;">
                        <h4>Th√¥ng tin thanh to√°n v√≠ ƒëi·ªán t·ª≠:</h4>
                        <p><strong>V√≠ MoMo:</strong> 0123456789</p>
                        <p><strong>T√™n:</strong> Ph∆∞∆°ng Store</p>
                        <p><strong>N·ªôi dung:</strong> DH${order._id}</p>
                        <p><strong>S·ªë ti·ªÅn:</strong> ${order.totalPrice.toLocaleString('vi-VN')} VNƒê</p>
                    </div>
                ` : ''}
                <h3>Danh s√°ch s·∫£n ph·∫©m:</h3>
                <ul>
                    ${order.items.map(item => `
                        <li>
                            ${item.title} - S·ªë l∆∞·ª£ng: ${item.quantity} - 
                            Gi√°: ${item.price.toLocaleString('vi-VN')} VNƒê
                        </li>
                    `).join('')}
                </ul>
                <p>Tr·∫°ng th√°i ƒë∆°n h√†ng: Ch·ªù x√°c nh·∫≠n</p>
                <p>Th·ªùi gian ƒë·∫∑t h√†ng: ${new Date(order.createdAt).toLocaleString('vi-VN')}</p>
                <p>Tr√¢n tr·ªçng,<br>Ph∆∞∆°ng Store</p>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email x√°c nh·∫≠n ƒë∆°n h√†ng ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email x√°c nh·∫≠n:', error);
        return false;
    }
};

// G·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
const sendPasswordReset = async (user, resetToken) => {
    try {
        const resetUrl = `${process.env.APP_URL}/reset-password/${resetToken}`;
        const mailOptions = {
            from: '"Ph∆∞∆°ng Store" <no-reply@phuongstore.com>',
            to: user.email,
            subject: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - Ph∆∞∆°ng Store',
            html: `
                <h1>Xin ch√†o ${user.name}!</h1>
                <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u t·∫°i Ph∆∞∆°ng Store.</p>
                <p>Vui l√≤ng click v√†o link b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
                <a href="${resetUrl}">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
                <p>Link n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù.</p>
                <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu, vui l√≤ng b·ªè qua email n√†y.</p>
                <p>Tr√¢n tr·ªçng,<br>Ph∆∞∆°ng Store</p>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:', error);
        return false;
    }
};

// G·ª≠i email th√¥ng b√°o ƒë∆°n h√†ng m·ªõi cho admin
const sendNewOrderNotification = async (order, user) => {
    try {
        const customerName = order.shippingInfo?.name || user.name;
        const customerEmail = order.shippingInfo?.email || user.email;
        
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: process.env.ADMIN_EMAIL,
            subject: `üîî ƒê∆°n h√†ng m·ªõi t·ª´ ${customerName}`,
            html: `
                <h1>Th√¥ng b√°o ƒë∆°n h√†ng m·ªõi</h1>
                <p>Kh√°ch h√†ng: ${customerName} (${customerEmail})</p>
                <p>M√£ ƒë∆°n h√†ng: ${order._id}</p>
                <p>T·ªïng ti·ªÅn: ${order.totalPrice.toLocaleString('vi-VN')} VNƒê</p>
                <p>Th·ªùi gian: ${new Date(order.createdAt).toLocaleString('vi-VN')}</p>
                <h3>Th√¥ng tin giao h√†ng:</h3>
                <p>H·ªç t√™n: ${order.shippingInfo?.name}</p>
                <p>ƒêi·ªán tho·∫°i: ${order.shippingInfo?.phone}</p>
                <p>Email: ${order.shippingInfo?.email}</p>
                <p>ƒê·ªãa ch·ªâ: ${order.shippingInfo?.address}</p>
                <h3>Th√¥ng tin thanh to√°n:</h3>
                <p>Ph∆∞∆°ng th·ª©c: ${order.getPaymentMethodDisplay()}</p>
                <p>Tr·∫°ng th√°i thanh to√°n: ${order.getPaymentStatusDisplay()}</p>
                <h3>Chi ti·∫øt s·∫£n ph·∫©m:</h3>
                <ul>
                    ${order.items.map(item => `
                        <li>${item.title} - SL: ${item.quantity} - 
                        Gi√°: ${item.price.toLocaleString('vi-VN')} VNƒê</li>
                    `).join('')}
                </ul>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        console.log('üìß Email th√¥ng b√°o ƒë∆°n h√†ng admin ƒë√£ g·ª≠i:', info.messageId);
        return true;
    } catch (error) {
        console.error('‚ùå L·ªói khi g·ª≠i email admin:', error);
        return false;
    }
};

// Xu·∫•t module
module.exports = {
    sendOrderConfirmation,
    sendPasswordReset,
    sendNewOrderNotification
};
